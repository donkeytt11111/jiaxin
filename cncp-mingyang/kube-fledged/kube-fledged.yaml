---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imagecaches.kubefledged.io
  labels:
    app: kubefledged
    kubefledged: kubefledged-controller
spec:
  group: kubefledged.io
  versions:
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: ImageCache is a specification for a ImageCache resource
        type: object
        required:
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ImageCacheSpec is the spec for a ImageCache resource
            type: object
            required:
            - cacheSpec
            properties:
              cacheSpec:
                type: array
                items:
                  description: CacheSpecImages specifies the Images to be cached
                  type: object
                  required:
                  - images
                  properties:
                    images:
                      type: array
                      items:
                        type: string
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
              imagePullSecrets:
                type: array
                items:
                  description: LocalObjectReference contains enough information to let
                    you locate the referenced object inside the same namespace.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
          status:
            description: ImageCacheStatus is the status for a ImageCache resource
            type: object
            required:
            - message
            - reason
            - startTime
            - status
            properties:
              completionTime:
                type: string
                format: date-time
              failures:
                type: object
                additionalProperties:
                  type: array
                  items:
                    description: NodeReasonMessage has failure reason and message for
                      a node
                    type: object
                    required:
                    - message
                    - node
                    - reason
                    properties:
                      message:
                        type: string
                      node:
                        type: string
                      reason:
                        type: string
              message:
                type: string
              reason:
                type: string
              startTime:
                type: string
                format: date-time
              status:
                description: ImageCacheActionStatus defines the status of ImageCacheAction
                type: string        
  scope: Namespaced
  names:
    plural: imagecaches
    singular: imagecache
    kind: ImageCache
    shortNames:
    - ic

---
apiVersion: v1
kind: Namespace
metadata:
  name: kube-fledged
  labels:
    app: kubefledged
    kubefledged: kubefledged-controller

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefledged-controller
  namespace: kube-fledged
  labels:
    app: kubefledged
    kubefledged: kubefledged-controller

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefledged-controller
  labels:
    app: kubefledged
    kubefledged: kubefledged-controller
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
  - apiGroups:
      - "kubefledged.io"
    resources:
      - imagecaches
    verbs:
      - get
      - list
      - watch
      - update      
  - apiGroups:
      - "kubefledged.io"
    resources:
      - imagecaches/status
    verbs:
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - create
      - update
      - patch
  - apiGroups:
      - "batch"
    resources:
      - jobs
    verbs:
      - get
      - list
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
      - get    

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefledged-controller  
  labels:
    app: kubefledged
    kubefledged: kubefledged-controller  
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubefledged-controller
subjects:
- kind: ServiceAccount
  name: kubefledged-controller
  namespace: kube-fledged
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:nodes

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefledged-controller
  namespace: kube-fledged
  labels:
    app: kubefledged
    component: kubefledged-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      kubefledged: kubefledged-controller
  template:
    metadata:
      labels:
        kubefledged: kubefledged-controller
        app: kubefledged
    spec:
      containers:
      - image: senthilrch/kubefledged-controller:v0.10.0
        command: ["/opt/bin/kubefledged-controller"]
        args:
        - "--stderrthreshold=INFO"
        - "--image-pull-deadline-duration=15m"
        - "--image-cache-refresh-frequency=0s"
        - "--image-pull-policy=IfNotPresent"
        imagePullPolicy: IfNotPresent
        name: controller
        env:
        - name: KUBEFLEDGED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBEFLEDGED_CRI_CLIENT_IMAGE
          value: "senthilrch/kubefledged-cri-client:v0.10.0"
        - name: BUSYBOX_IMAGE
          value: "senthilrch/busybox:1.35.0"
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
          limits:
            cpu: 200m
            memory: 800Mi
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kubefledged-controller
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kubefledged-webhook-server
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server
webhooks:
  - name: validate-image-cache.kubefledged.io
    admissionReviewVersions: ["v1beta1", "v1"]
    timeoutSeconds: 1
    failurePolicy: Fail
    sideEffects: None
    clientConfig:
      service:
        namespace: kube-fledged
        name: kubefledged-webhook-server
        path: "/validate-image-cache"
        port: 3443
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZCVENDQXUyZ0F3SUJBZ0lDQitVd0RRWUpLb1pJaHZjTkFRRUxCUUF3R1RFWE1CVUdBMVVFQ2hNT2EzVmkKWldac1pXUm5aV1F1YVc4d0hoY05NakV3TnpJeU1EZ3hPVFEwV2hjTk1qSXdOekl5TURneE9UUTBXakFaTVJjdwpGUVlEVlFRS0V3NXJkV0psWm14bFpHZGxaQzVwYnpDQ0FpSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnSVBBRENDCkFnb0NnZ0lCQU93dDNjWm12SnRNN1NKUGx4QlRHUGtSY3lxZGlzUXNEKzRBbTdYYjVnOVhZd3FyanZwanZVdkMKTS9FVkZiK1p1aGd5R2I5b3dEb0IxOFJ1VGd2WFMrNTZ4VlNQYTE0WENoTi92U2ZZaTAydzhaZGcxdy8wNTBFRwplMXQ4ZytTL2hXZlhxUnFORnRONTk0N25jNFcxUllJYUN5WVhjc3dGbHNMdG9xRU95aFR3ZmhyTURRY1lvaDFvCmVZRmZ1bHdiSGltdlJKYlR0QXh2b2o3OVl5MHEzTVdGWXArZ3JvR1dadk1ZeFRRSjZKT0F6bjdIUEFqY3ZqdjIKRmdRSTBVNDlDcUdpUzZWR0ZlOHFBSm15b3BYcHBJZ2l3ODUrbHBnYVA1Y3p6UjVjWHp6anBUczl1T2pWdllzLwpZSm5JS05nUlNJWnJkaE9oUzdJcllhM1JhTU5la3NSOWsrMm5LYXdwSkJBVy91VmszRmcrZFFWWHk2YTE0Yk5ZCmxnTis3SXptd21QTk1BVGVVOTZ5UWVrQ1R3UUlGWVkwZmlxd0ZjamlzZlJ6U1FHY1dUbk91bkV0MWlKbWlXckkKZzUvWEI5ZDhHQ3FGWkJEdnpNUjU5S1RwRlhacjNPYmxONkFIQ3VQa0xKNGZPMklDZWdoeGQ4TUsrTExkaERLMwo3N01qV1dXMkV4L1RDT2pQbUNIalFzWjNCeTVFR2hFTGdIczV6NGxTQSsrZGRFR1AvamptL3FQOUJWVmFBNXJJCkRuSCs1bHNuZkNEQXJYaE5HckVhaVA4a3JjVmF1SlRQNXdJMElORFFoeE1XMUFqdHA0SmgxSVZ1bHNuZU9CME4KempGMVIvempCbDhUTlN3Y2RnN3dCbm1lVWhDbGVvZ1MwZ1J0ejREZDEzeGwrOFc0ZGNDL0FnTUJBQUdqVnpCVgpNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFCkJUQURBUUgvTUIwR0ExVWREZ1FXQkJRUmo4WUFSS09Vb213Z0Z6WGNrandBRFpEU2VqQU5CZ2txaGtpRzl3MEIKQVFzRkFBT0NBZ0VBQ0RRb1JFbllsd2pOb0tFTUlqUGJ5Wk1MdUQ5Smt6ZFhldzlESTBCNUtTaHkySFZBc0E2MgpiYzFZM25lYXRyQWcyUXJ5dklhYzZCUVhQbW4zUmF2V084blNuQnJDbHJkYk8vSXc2RnFtZVBVaDZSQVQzNyt6CitoWVdpL3JwL1U5bVBidm4yc2xOMVRlK3R6a1BsN01KeGxwMXRSWTU0RjB6Q0ZOdnFwUXBMUDdiS1VTVVVITmQKUW1WcWVQaHBucC9XV1dQNklXNVJ2VE8rSmhhTFpSV3hNaUxiWWtxN1lOZkI4SHhCam92T1NDMEE4TVRCRGVuTgpaV2lWcjN2K1kyOW9qZFY5R29VSzNPaDN0YVZNbStXWUxBdGxOcmpVdGxzU0NWN1dGbFhpNTZVd2xPZXd4ZGhmClcvMGdrTFkyaDNKNHdHUDZ6c09XbGgzVlVMV0w3WUZUYWllTEhpT0N3VzVaZ1FoWVRFNFAvcWdaQkZVVXRqNGUKbGRXeVFZWlBUR2dNelVxdm0wM3NDRHByRTM1eStSY0hFcEpwU2NXcy9yeW5VaXVJYnVGU3dhZUY2RktFZG5hSwpIMnRvdnpjMlBvMDJyWVFFOVhDNHdKUFpSaEpFYldocVROZ3JuL2NPRGZuNFovUVRyMGoxbGU1V3BacXE4Y1hWCjl5UHNVclVRL1g1WDNsMURtejlMcXhDd1ErZG5YU2xxczdRYnY5dDhPbUNZUEdnQVJaRU1qejFDUmJIbDZTaGkKaVAzY1JUTVRFV2hUMTJRZGZPd3djYUVCanNoQ0doVDAwZ3lUdFFzNm9wSzZLQm11RXF0cXV1TlFyMUdmaTl5bQp5WW1pNGg4RFdIdERpTEFrQW1DZWZuQXZoTWpiRXF3SzN6bmROdW1GTTAvbEtyZTBtekgvU3ZJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: ["kubefledged.io"]
        apiVersions: ["v1alpha2"]
        resources: ["imagecaches"]
        scope: "Namespaced"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubefledged-webhook-server
  namespace: kube-fledged
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefledged-webhook-server
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
rules:
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - validatingwebhookconfigurations
    verbs:
      - get
      - update

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubefledged-webhook-server 
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server   
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubefledged-webhook-server
subjects:
- kind: ServiceAccount
  name: kubefledged-webhook-server
  namespace: kube-fledged
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:nodes

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubefledged-webhook-server
  namespace: kube-fledged
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server
spec:
  replicas: 1
  selector:
    matchLabels:
      kubefledged: kubefledged-webhook-server
  template:
    metadata:
      labels:
        kubefledged: kubefledged-webhook-server
        app: kubefledged
    spec:
      initContainers:
      - image: senthilrch/kubefledged-webhook-server:v0.10.0
        command: ["/opt/bin/kubefledged-webhook-server"]
        args:
        - "--stderrthreshold=INFO"
        - "--init-server"
        imagePullPolicy: IfNotPresent
        name: init
        env:
        - name: KUBEFLEDGED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: WEBHOOK_SERVER_SERVICE
          value: kubefledged-webhook-server
        - name: VALIDATING_WEBHOOK_CONFIG
          value: kubefledged-webhook-server
        - name: CERT_KEY_PATH
          value: "/var/run/secrets/webhook-server/"
        volumeMounts:
        - name: certkey-volume
          mountPath: "/var/run/secrets/webhook-server"
      containers:
      - image: senthilrch/kubefledged-webhook-server:v0.10.0
        command: ["/opt/bin/kubefledged-webhook-server"]
        args:
        - "--stderrthreshold=INFO"
        - "--cert-file=/var/run/secrets/webhook-server/tls.crt"
        - "--key-file=/var/run/secrets/webhook-server/tls.key"
        - "--port=443"
        imagePullPolicy: IfNotPresent
        name: webhook-server
        env:
        - name: KUBEFLEDGED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          requests:
            cpu: 10m
            memory: 40Mi
          limits:
            cpu: 200m
            memory: 800Mi
        volumeMounts:
        - name: certkey-volume
          mountPath: "/var/run/secrets/webhook-server"
          readOnly: true
      volumes:
      - name: certkey-volume
        emptyDir: {}
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: kubefledged-webhook-server
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - operator: Exists
        effect: NoExecute

---
apiVersion: v1
kind: Service
metadata:
  name: kubefledged-webhook-server
  namespace: kube-fledged
  labels:
    app: kubefledged
    kubefledged: kubefledged-webhook-server
spec:
  ports:
  - name: webhook-server
    port: 3443
    protocol: TCP
    targetPort: 443
  selector:
    kubefledged: kubefledged-webhook-server
  type: ClusterIP
